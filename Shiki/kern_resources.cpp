//                                                   
//  kern_resources.cpp                               
//  Shiki                                            
//                                                   
//  Copyright Â© 2016-2017 vit9696. All rights reserved.   
//                                                   
//  This is an autogenerated file!                   
//  Please avoid any modifications!                  
//                                                   

#include "kern_resources.hpp"                      


// Patch section

alignas(8) static const uint8_t patchBuf0[] { 0xBF, 0x69, 0x6D, 0x72, 0x64, 0xBE, 0x2C, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf1[] { 0xBF, 0x6E, 0x6D, 0x72, 0x64, 0xBE, 0x2C, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf2[] { 0xBF, 0x69, 0x6D, 0x72, 0x64, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf3[] { 0xBF, 0x6E, 0x6D, 0x72, 0x64, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf4[] { 0xBF, 0x63, 0x76, 0x61, 0x71, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf5[] { 0xBF, 0x6E, 0x76, 0x61, 0x71, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf6[] { 0xBF, 0x63, 0x76, 0x61, 0x63, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf7[] { 0xBF, 0x6E, 0x76, 0x61, 0x63, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf8[] { 0xBF, 0x63, 0x76, 0x61, 0x65, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf9[] { 0xBF, 0x6E, 0x76, 0x61, 0x65, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf10[] { 0xBF, 0x63, 0x76, 0x61, 0x7A, 0xBE, 0x90, 0x01, 0x00, 0x00, };
alignas(8) static const uint8_t patchBuf11[] { 0xBF, 0x6E, 0x76, 0x61, 0x7A, 0xBE, 0x90, 0x01, 0x00, 0x00, };
static UserPatcher::BinaryModPatch patches0[] {
	{ CPU_TYPE_X86_64, patchBuf0, patchBuf1, 10, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionNDRMI },
	{ CPU_TYPE_X86_64, patchBuf2, patchBuf3, 10, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionNDRMI },
	{ CPU_TYPE_X86_64, patchBuf4, patchBuf5, 10, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionNSTREAM },
	{ CPU_TYPE_X86_64, patchBuf6, patchBuf7, 10, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionNSTREAM },
	{ CPU_TYPE_X86_64, patchBuf8, patchBuf9, 10, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionNSTREAM },
	{ CPU_TYPE_X86_64, patchBuf10, patchBuf11, 10, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionNSTREAM },
};
alignas(8) static const uint8_t patchBuf12[] { 0x53, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x0F, 0xA2, };
alignas(8) static const uint8_t patchBuf13[] { 0x53, 0xB8, 0xC2, 0x06, 0x02, 0x00, 0x90, 0x90, };
alignas(8) static const uint8_t patchBuf14[] { 0xC7, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x0F, 0xA2, };
alignas(8) static const uint8_t patchBuf15[] { 0xC7, 0xC0, 0xC2, 0x06, 0x02, 0x00, 0x90, 0x90, };
static UserPatcher::BinaryModPatch patches1[] {
	{ CPU_TYPE_X86, patchBuf12, patchBuf13, 8, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionFCPUID },
	{ CPU_TYPE_X86_64, patchBuf14, patchBuf15, 8, 0, 1, UserPatcher::FileSegment::SegmentTextText, SectionFCPUID },
};
alignas(8) static const uint8_t patchBuf16[] { 0x66, 0x6F, 0x72, 0x63, 0x65, 0x4F, 0x66, 0x66, };
alignas(8) static const uint8_t patchBuf17[] { 0x61, 0x76, 0x6F, 0x69, 0x64, 0x4F, 0x66, 0x66, };
alignas(8) static const uint8_t patchBuf18[] { 0x66, 0x6F, 0x72, 0x63, 0x65, 0x4F, 0x66, 0x66, };
alignas(8) static const uint8_t patchBuf19[] { 0x61, 0x76, 0x6F, 0x69, 0x64, 0x4F, 0x66, 0x66, };
static UserPatcher::BinaryModPatch patches2[] {
	{ CPU_TYPE_X86, patchBuf16, patchBuf17, 8, 0, 1, UserPatcher::FileSegment::SegmentTextCstring, SectionOFFLINE },
	{ CPU_TYPE_X86_64, patchBuf18, patchBuf19, 8, 0, 2, UserPatcher::FileSegment::SegmentTextCstring, SectionOFFLINE },
};

// Mod section

UserPatcher::BinaryModInfo ADDPR(binaryMod)[] {
	{ "/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox", patches0, 6 },
	{ "/System/Library/PrivateFrameworks/CoreFP.framework/Versions/A/CoreFP", patches1, 2 },
	{ "/System/Library/PrivateFrameworks/AppleGVA.framework/Versions/A/AppleGVA", patches2, 2 },
};

const size_t ADDPR(binaryModSize) {3};

// Process list

UserPatcher::ProcInfo ADDPR(procInfo)[] {
	{ "/Applications/iTunes.app/Contents/MacOS/iTunes", 46, SectionNDRMI },
	{ "/Applications/QuickTime Player.app/Contents/MacOS/QuickTime Player", 66, SectionNDRMI },
	{ "/Applications/Safari.app/Contents/MacOS/Safari", 46, SectionNSTREAM },
	{ "/System/Library/Frameworks/WebKit.framework/Versions/A/XPCServices/com.apple.WebKit.WebContent.xpc/Contents/MacOS/com.apple.WebKit.WebContent", 141, SectionNSTREAM },
};

const size_t ADDPR(procInfoSize) {4};